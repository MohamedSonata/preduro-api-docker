# path: ./docker-compose.yml

version: '3'
services:
  strapi-dev:
    # platform: linux/amd64
    # container_name: strapi
    build: .
    image: mosonata/strapi-api:buildx

    # restart: unless-stopped
    env_file: .env

    environment:
      # DATABASE_CLIENT: ${DATABASE_CLIENT}
      # DATABASE_HOST: strapiDB
      # DATABASE_PORT: ${DATABASE_PORT}
      # DATABASE_NAME: ${DATABASE_NAME}
      # DATABASE_USERNAME: ${DATABASE_USERNAME}
      # DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      # JWT_SECRET: ${JWT_SECRET}
      # ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      # APP_KEYS: ${APP_KEYS}
      # NODE_ENV: ${NODE_ENV}
      # DATABASE_CLIENT: postgres
      DATABASE_CLIENT: postgres
      DATABASE_HOST: strapiDbDev
      DATABASE_PORT: 5432
      DATABASE_NAME: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgrespw
      JWT_SECRET: EKTlwUaxZtI0ufLT/5KbQA==
      ADMIN_JWT_SECRET: z0GurZ7dKAxmfY7OUEiXPA==
      APP_KEYS: ntgWjxfIwfaj5gp818L6GA==,wPOtAPxzZuNg2rK+3NzefA==
      NODE_ENV: development
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 120s
      restart_policy:
        condition: any
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapiDev
    depends_on:
      - strapiDbDev
      
  strapiDbDev:
    # container_name: strapiDB
    # platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: ${DATABASE_NAME}
     
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5432:5432'
    networks:
      - strapiDev

volumes:
  strapi-data:

networks:
  strapiDev:
    name: strapiDev
    driver: bridge
